/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hermes.gui.dialogs;

import com.hermes.common.HChannel;
import com.hermes.common.HHash;
import com.hermes.common.IPCacheManager;
import com.hermes.gui.renderers.IPCacheRenderer;
import java.io.IOException;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.DataFormatException;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.SwingUtilities;

/**
 *
 * @author joaquin
 */
public class IpCacheManagerDialog extends javax.swing.JDialog
{

    /**
     * Creates new form CacheManagerDialog
     */
    private IPCacheManager cacheManager;

    public IpCacheManagerDialog(java.awt.Frame parent, boolean modal) throws IOException
    {
        super(parent, modal);
        initComponents();
        cacheManager = new IPCacheManager("ChatroomIPs.dat");
        
        updateList();

    }

    private void updateList() throws IOException
    {
        ((DefaultListModel<HChannel>)LCache.getModel()).clear();
        Iterator<HChannel> i = cacheManager.read().iterator();
        HChannel currentChannel;

        while (i.hasNext())
        {
            currentChannel = i.next();
            ((DefaultListModel<HChannel>)LCache.getModel()).addElement(currentChannel);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        TFHash = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        LCache = new javax.swing.JList();
        BAdd = new javax.swing.JButton();
        BAccept = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        LCache.setModel(new DefaultListModel<HChannel>());
        LCache.setCellRenderer(new IPCacheRenderer());
        LCache.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                LCacheMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(LCache);

        BAdd.setText("Add");
        BAdd.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BAddActionPerformed(evt);
            }
        });

        BAccept.setText("Accept");
        BAccept.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BAcceptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BAccept))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(TFHash)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BAdd)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFHash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BAdd))
                .addGap(13, 13, 13)
                .addComponent(BAccept)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BAcceptActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BAcceptActionPerformed
    {//GEN-HEADEREND:event_BAcceptActionPerformed
        try
        {
            cacheManager.clear();
            
            Enumeration<HChannel> channels=((DefaultListModel<HChannel>)LCache.getModel()).elements();
            HChannel currentChannel;
            while(channels.hasMoreElements())
            {
                currentChannel=channels.nextElement();
                cacheManager.write(currentChannel.getPublicIP(),(short)currentChannel.getPort());
            }
            
        } catch (IOException ex)
        {
            Logger.getLogger(IpCacheManagerDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        dispose();
    }//GEN-LAST:event_BAcceptActionPerformed

    private void BAddActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BAddActionPerformed
    {//GEN-HEADEREND:event_BAddActionPerformed
        if (!TFHash.getText().replaceAll(" ","").isEmpty())
        {

            try
            {
                HChannel c=HHash.getInstance().decode(TFHash.getText());
                
                ((DefaultListModel<HChannel>)LCache.getModel()).addElement(c);
                cacheManager.write(c.getPublicIP(),(short)c.getPort());
                TFHash.setText("");
            } catch (IOException ex)
            {
                Logger.getLogger(IpCacheManagerDialog.class.getName()).log(Level.SEVERE, null, ex);
            } catch (DataFormatException ex)
            {
                Logger.getLogger(IpCacheManagerDialog.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_BAddActionPerformed

    private void LCacheMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_LCacheMousePressed
    {//GEN-HEADEREND:event_LCacheMousePressed
        if ( SwingUtilities.isRightMouseButton(evt) )
        {
            JList list = (JList)evt.getSource();
            int row = list.locationToIndex(evt.getPoint());
            ((DefaultListModel<HChannel>)list.getModel()).remove(row);
            
        }
    }//GEN-LAST:event_LCacheMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(IpCacheManagerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(IpCacheManagerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(IpCacheManagerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(IpCacheManagerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                IpCacheManagerDialog dialog;
                try
                {
                    dialog = new IpCacheManagerDialog(new javax.swing.JFrame(), true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter()
                    {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e)
                        {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (IOException ex)
                {
                    Logger.getLogger(IpCacheManagerDialog.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BAccept;
    private javax.swing.JButton BAdd;
    private javax.swing.JList LCache;
    private javax.swing.JTextField TFHash;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
