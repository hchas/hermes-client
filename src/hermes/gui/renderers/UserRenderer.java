/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hermes.gui.renderers;

import com.hermes.common.HUser;
import com.hermes.common.constants.HAdminLevel;
import hermes.gui.Panel;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionListener;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author joaquin
 */
public class UserRenderer extends javax.swing.JPanel implements ListCellRenderer<HUser>
{

    /**
     * Creates new form UserRenderer
     */

    public UserRenderer()
    {
        initComponents();
        BMuzzle.setVisible(false);
        BKill.setVisible(false);
        BBan.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        LAvatar = new javax.swing.JLabel();
        LUsername = new javax.swing.JLabel();
        LPersonalMessage = new javax.swing.JLabel();
        LASL = new javax.swing.JLabel();
        BMuzzle = new javax.swing.JButton();
        BKill = new javax.swing.JButton();
        BBan = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));

        setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 1, 5, 1));

        LAvatar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        LUsername.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        LUsername.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LUsername.setMaximumSize(new java.awt.Dimension(10, 21));
        LUsername.setMinimumSize(new java.awt.Dimension(10, 21));
        LUsername.setPreferredSize(new java.awt.Dimension(10, 21));

        LPersonalMessage.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        LPersonalMessage.setForeground(new java.awt.Color(102, 102, 102));
        LPersonalMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LPersonalMessage.setMaximumSize(new java.awt.Dimension(2, 21));
        LPersonalMessage.setMinimumSize(new java.awt.Dimension(2, 21));
        LPersonalMessage.setPreferredSize(new java.awt.Dimension(2, 21));

        LASL.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        LASL.setForeground(new java.awt.Color(102, 102, 102));
        LASL.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LASL.setMaximumSize(new java.awt.Dimension(2, 21));
        LASL.setMinimumSize(new java.awt.Dimension(2, 21));
        LASL.setPreferredSize(new java.awt.Dimension(2, 21));

        BMuzzle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hermes/resources/images/muzzle.png"))); // NOI18N
        BMuzzle.setBorderPainted(false);
        BMuzzle.setContentAreaFilled(false);

        BKill.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hermes/resources/images/kill.png"))); // NOI18N
        BKill.setBorderPainted(false);
        BKill.setContentAreaFilled(false);

        BBan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hermes/resources/images/ban.png"))); // NOI18N
        BBan.setBorderPainted(false);
        BBan.setContentAreaFilled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BMuzzle, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LASL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LPersonalMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BKill, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BBan, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(10, 10, 10))
                    .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BMuzzle, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addComponent(LUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LASL, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BKill, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BBan, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LPersonalMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(LAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void addMuzzleActionListener(ActionListener al)
    {
        BMuzzle.addActionListener(al);
    }

    public void addKillActionListener(ActionListener al)
    {
        BKill.addActionListener(al);
    }
    
    public void addBanActionListener(ActionListener al)
    {
        BBan.addActionListener(al);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BBan;
    private javax.swing.JButton BKill;
    private javax.swing.JButton BMuzzle;
    private javax.swing.JLabel LASL;
    private javax.swing.JLabel LAvatar;
    private javax.swing.JLabel LPersonalMessage;
    private javax.swing.JLabel LUsername;
    private javax.swing.Box.Filler filler1;
    // End of variables declaration//GEN-END:variables

    @Override
    public Component getListCellRendererComponent(JList<? extends HUser> list, HUser value, int index, boolean isSelected, boolean cellHasFocus)
    {
        if (isSelected)
        {
            setBackground(new Color(224, 227, 206));
            setForeground(list.getSelectionForeground());
            
            Panel p=(Panel) list.getParent().getParent().getParent().getParent().getParent();
            if (p.getClient().getAdminLevel()!=HAdminLevel.Normal_User)
            {
                BMuzzle.setVisible(true);
                BKill.setVisible(true);
                BBan.setVisible(true);
            }
            else
            {
                BMuzzle.setVisible(false);
                BKill.setVisible(false);
                BBan.setVisible(false);
            }
        }
        else
        {
            setBackground(new Color(248, 248, 248));
                BMuzzle.setVisible(false);
                BKill.setVisible(false);
                BBan.setVisible(false);
        }
        if (value.getAvatar() != null)
        {
            LAvatar.setIcon(value.getAvatar());
        }
        else
        {
            LAvatar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hermes/resources/images/noAvatar.png")));
        }

        if (value.getLevel() == HAdminLevel.Moderator)
        {
            LUsername.setForeground(Color.BLUE);
        }
        else if (value.getLevel() == HAdminLevel.Administratior)
        {
            LUsername.setForeground(new Color(0, 128, 0));
        }
        else if (value.getLevel() == HAdminLevel.Host)
        {
            LUsername.setForeground(Color.RED);
        }
        else
        {
            LUsername.setForeground(Color.BLACK);
        }

        LUsername.setText(value.getUsername());
        LUsername.validate();

        LPersonalMessage.setText(value.getPersonalMessage());
        String asl = value.getAge() + " - " + value.getGender() + " - ";

        if (value.getRegion().trim().equals(""))
        {
            asl += value.getCountry();
        }
        else
        {
            asl += value.getRegion().trim() + ", " + value.getCountry().toString().trim();
        }

        LASL.setText(asl);
        return this;
    }
}
